设计一个优秀的拼写检查系统是非常有挑战性的。我们这里讨论的拼写检查是基于编辑距离(Edit Distance, 详见17.2)，此处我们仅讨论计算两个字符串的编辑距离。一个拼写检查系统应该具有从字典库中查找到一系列匹配给定字符串的功能。进一步说，当进行拼写纠正时（不考虑错误拼写的单词和键盘上两个字母挨的很紧的情况），编辑距离可能不是正确的。
那么，你将会怎样设计这个拼写纠正系统呢？

*提示：从单词距离的恰当概念开始*

答：大多数拼写纠正系统的基本思想是使得目标词与当前词的编辑距离尽可能小（1个或2个编辑距离）。进一步说，如果我们用一个hash table保存字典中的所有单词，然后查找所有与当前词编辑距离为2的单词，这样目标词就有可能在这个集合中。如果字母表有m个字符，查找文本有n个字符，我们需要进行O(n^2m^2)的hash table查找。为了更精确，对于单词的长度n，我们可以选取任意两个字符，将他们映射成在字母表中的其他字符。选取任意两个字符的方法共有n(n-1)/2种，每个字符可以映射成(m-1)中的其他字符。因此，总的查询次数变成了n(n-1)(m-1)^2/2。

与当前单词编辑距离为2或1的单词集合，以及字典集合可能是非常大的。此时提供给用户一个排好序的建议词汇列表就显得很重要，而且可以把匹配度最高的往前放。以下是实现这个功能的一些常用的方法：
- 键入错误模型-有时候打字的时候敲错键可能导致拼写错误，这类错误模型基于键盘布局
- 语音模型-一种很常见的拼写错误分类，通常由于人们知道怎样发音，但是不知道准确的拼写。这种情况下，需要能把文本映射到发音，然后查找所有具有相同发音的单词
- 历史词改进-有时候用户会自定义一些最有可能的错误拼写数据，这些历史数据经常是拼写纠正中最准备的。
- 词干-有时候可以通过只保留每个单词的词干来减少字典的大小（这里需要对查询文本提取词干）。
